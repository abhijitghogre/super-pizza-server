{"version":3,"sources":["services/api.js","services/constants.js","services/utils.js","Menu/Pizza/Pizza.js","Menu/Menu.js","Cart/Cart.js","Address/Address.js","ThankYou/ThankYou.js","Header/Header.js","Register/Register.js","Login/Login.js","Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["url","method","body","handleSuccess","handleError","sanitizedUrl","substr","fetch","JSON","stringify","undefined","credentials","headers","then","response","status","json","err","catch","price","currency","toFixed","constants","Pizza","props","context","state","isProductDescriptionModalVisible","this","setState","document","getElementsByTagName","classList","add","remove","quantityAdded","cart","map","cartItem","id","pizza","quantity","currentQuantity","getQuantityAddedToCart","onUpdateQuantity","onRemoveFromCart","className","onClick","showProductDescriptionModal","src","image_url","alt","name","utils","description","decrementQuantity","icon","faMinusCircle","incrementQuantity","faPlusCircle","to","faShoppingCart","onAddToCart","classNames","modal","hideProductDescriptionModal","aria-label","style","maxWidth","React","Component","Menu","pizzas","api","result","error","console","key","Cart","total","length","getCartTotal","Address","orderConfirmed","enableReinitialize","initialValues","email","loggedInUser","phone","address","zip_code","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","customer_email","onEmptyCart","alert","isSubmitting","type","disabled","faEnvelope","component","faPhone","ThankYou","faCheckCircle","fontSize","Header","isMenuOpen","role","faPizzaSlice","size","burger","closeMenu","openMenu","aria-expanded","data-target","aria-hidden","value","onChange","e","onCurrencySelect","target","onLogOut","cartCount","Register","formSubmitted","password","password_confirmation","swal","Object","keys","message","Login","onLogin","Orders","unauthorised","isLoadingOrders","orders","order","created_at","suborders","cost","delivery_fee","suborder","margin","App","localStorage","getItem","parse","loginUser","setItem","filteredCart","filter","removeItem","updatedCart","window","location","reload","currencySelect","logOutUser","exact","path","addToCart","updateQuantity","removeFromCart","emptyCart","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80977f06.chunk.js","sourcesContent":["const API_HOST = '/api/v1';\n\nexport default {\n  call: ({url, method, body, handleSuccess, handleError}) => {\n    let sanitizedUrl = url;\n    if (url[0] === '/') {\n      sanitizedUrl = url.substr(1)\n    }\n    fetch(`${API_HOST}/${sanitizedUrl}`, {\n      method,\n      body: body ? JSON.stringify(body) : undefined,\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json, text-plain, */*\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      },\n    })\n      .then(response => {\n        if (response.status >= 200 && response.status < 300) {\n          return response.json();\n        }\n\n        return response.json().then((err) => {\n          throw err;\n        });\n\n      })\n      .then(handleSuccess)\n      .catch(handleError)\n  }\n}","export default {\n  deliveryFee: 30,\n  euroExchangeRate: 0.89\n}","import constants from \"./constants\";\n\nexport default {\n  displayInSelectedCurrency: ({price, currency}) => {\n    if (currency === 'usd') {\n       return `${price.toFixed(2)} USD`;\n    }\n    if (currency === 'eur') {\n      return `${(constants.euroExchangeRate * price).toFixed(2)} EUR`;\n    }\n\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMinusCircle, faPlusCircle, faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\nimport constants from \"../../services/constants\";\nimport utils from \"../../services/utils\";\n\nexport default class Pizza extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      isProductDescriptionModalVisible: false\n    }\n  }\n\n  showProductDescriptionModal() {\n    this.setState({\n      isProductDescriptionModalVisible: true\n    });\n\n    document.getElementsByTagName('html')[0].classList.add('is-clipped');\n  }\n\n  hideProductDescriptionModal() {\n    this.setState({\n      isProductDescriptionModalVisible: false\n    });\n\n    document.getElementsByTagName('html')[0].classList.remove('is-clipped');\n  }\n\n  getQuantityAddedToCart() {\n    let quantityAdded = 0;\n    if (this.props.cart) {\n      this.props.cart.map(cartItem => {\n        if (cartItem.id === this.props.pizza.id) {\n          quantityAdded = cartItem.quantity;\n        }\n        return cartItem;\n      });\n    }\n    return quantityAdded;\n  }\n\n  incrementQuantity() {\n    const currentQuantity = this.getQuantityAddedToCart();\n    this.props.onUpdateQuantity(this.props.pizza.id, currentQuantity + 1)\n  }\n\n  decrementQuantity() {\n    const currentQuantity = this.getQuantityAddedToCart();\n    if (currentQuantity === 1) {\n      this.props.onRemoveFromCart(this.props.pizza.id);\n    } else {\n      this.props.onUpdateQuantity(this.props.pizza.id, currentQuantity - 1);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"column is-one-quarter\">\n        <div className=\"card\">\n          <div className=\"card-image pointer\" onClick={() => this.showProductDescriptionModal()}>\n            <figure className=\"image is-4by3\">\n              <img src={this.props.pizza.image_url} alt=\"Placeholder\"/>\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"title is-4\">{this.props.pizza.name}</div>\n            <div className=\"subtitle is-6\">{utils.displayInSelectedCurrency({\n              price: this.props.pizza.price,\n              currency: this.props.currency\n            })}\n            </div>\n            <div className=\"content ellipsis is-ellipsis-3 pointer\" onClick={() => this.showProductDescriptionModal()}>\n              {this.props.pizza.description}\n            </div>\n          </div>\n          <footer className=\"card-footer\">\n            {\n              this.getQuantityAddedToCart() > 0 ? (\n                <>\n                  <div className=\"card-footer-item\">\n                    <div className=\"columns is-mobile\">\n                      <div className=\"column pointer\" onClick={() => this.decrementQuantity()}>\n                        <FontAwesomeIcon icon={faMinusCircle}/>\n                      </div>\n                      <div className=\"column\">\n                        <div className=\"quantity\">{this.getQuantityAddedToCart()}</div>\n                      </div>\n                      <div className=\"column pointer\" onClick={() => this.incrementQuantity()}>\n                        <FontAwesomeIcon icon={faPlusCircle}/>\n                      </div>\n                    </div>\n                  </div>\n                  <Link className=\"card-footer-item pointer\" to=\"/cart\">\n                    <FontAwesomeIcon icon={faShoppingCart}/>\n                  </Link>\n                </>\n              ) : (\n\n                <div className=\"card-footer-item pointer\"\n                     onClick={() => this.props.onAddToCart({\n                       id: this.props.pizza.id,\n                       name: this.props.pizza.name,\n                       price: this.props.pizza.price,\n                       image_url: this.props.pizza.image_url,\n                     })}>\n                  <div className=\"has-text-danger\">Add to cart</div>\n                </div>\n\n              )\n            }\n          </footer>\n        </div>\n        <div className={classNames({modal: true, 'is-active': this.state.isProductDescriptionModalVisible})}\n             id=\"productDescriptionModal\">\n          <div className=\"modal-background\" onClick={() => this.hideProductDescriptionModal()}/>\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">{this.props.pizza.name}</p>\n              <button className=\"delete\" aria-label=\"close\" onClick={() => this.hideProductDescriptionModal()}/>\n            </header>\n            <section className=\"modal-card-body\">\n              <div style={{maxWidth: 200}}>\n                <figure className=\"image is-4by3\">\n                  <img src={this.props.pizza.image_url} alt=\"Placeholder\"/>\n                </figure>\n              </div>\n              <br/>\n              <div className=\"title is-6\">\n                {utils.displayInSelectedCurrency({\n                  price: this.props.pizza.price,\n                  currency: this.props.currency\n                })}\n              </div>\n              <div className=\"content\">\n                {this.props.pizza.description}\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport api from \"../services/api\";\nimport Pizza from \"./Pizza/Pizza\";\n\nexport default class Menu extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pizzas: []\n    };\n  }\n\n  componentDidMount() {\n    api.call({\n      url: '/pizzas',\n      method:'GET',\n      handleSuccess: (result) => {\n        this.setState({\n          pizzas: result\n        })\n      },\n      handleError: (error) => {\n        console.error(\"error\", error)\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"columns is-multiline\">\n            {this.state.pizzas.map(pizza =>\n              <Pizza\n                currency={this.props.currency}\n                pizza={pizza}\n                key={pizza.id}\n                cart={this.props.cart}\n                onAddToCart={(pizza) => this.props.onAddToCart(pizza)}\n                onRemoveFromCart={(id) => this.props.onRemoveFromCart(id)}\n                onUpdateQuantity={(id, quantity) => this.props.onUpdateQuantity(id, quantity)}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport constants from \"../services/constants\";\nimport utils from \"../services/utils\";\n\nexport default class Cart extends React.Component {\n\n  getCartTotal() {\n    let total = constants.deliveryFee;\n\n    this.props.cart.map(pizza => {\n      total = total + pizza.quantity * pizza.price\n    });\n\n    return total;\n  }\n\n  incrementQuantity(currentQuantity, id) {\n    this.props.onUpdateQuantity(id, currentQuantity + 1)\n  }\n\n  decrementQuantity(currentQuantity, id) {\n    if (currentQuantity === 1) {\n      this.props.onRemoveFromCart(id);\n    } else {\n      this.props.onUpdateQuantity(id, currentQuantity - 1);\n    }\n  }\n\n  render() {\n    if (this.props.cart.length) {\n      return (\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"title has-text-centered\">Your cart</div>\n            <div className=\"subtitle has-text-centered\">{this.props.cart.length} item(s)</div>\n\n            {this.props.cart.map(pizza => {\n              return (\n                <div className=\"columns is-vcentered card\" key={pizza.id}>\n                  <div className=\"column has-text-centered\">\n                    <figure className=\"image is-64x64 is-inline-block\">\n                      <img src={pizza.image_url} alt={pizza.name}/>\n                    </figure>\n                  </div>\n                  <div className=\"column has-text-centered\">\n                    {pizza.name}\n                  </div>\n                  <div className=\"column has-text-centered\">\n                    {utils.displayInSelectedCurrency({\n                      price: pizza.price,\n                      currency: this.props.currency\n                    })}\n                  </div>\n                  <div className=\"column has-text-centered\">\n                    <div style={{maxWidth: 100}} className=\"is-inline-block\">\n                      <div className=\"columns is-mobile\">\n                        <div className=\"column pointer\">\n                          <FontAwesomeIcon icon={faMinusCircle}\n                                           onClick={() => this.decrementQuantity(pizza.quantity, pizza.id)}/>\n                        </div>\n                        <div className=\"column\">\n                          <div className=\"quantity\">{pizza.quantity}</div>\n                        </div>\n                        <div className=\"column pointer\">\n                          <FontAwesomeIcon icon={faPlusCircle}\n                                           onClick={() => this.incrementQuantity(pizza.quantity, pizza.id)}/>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"column has-text-centered\">\n                    {utils.displayInSelectedCurrency({\n                      price: pizza.price * pizza.quantity,\n                      currency: this.props.currency\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n\n            <div className=\"columns card\">\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column has-text-centered\">\n                Delivery charges\n              </div>\n              <div className=\"column has-text-centered\">\n                {utils.displayInSelectedCurrency({\n                  price: constants.deliveryFee,\n                  currency: this.props.currency\n                })}\n              </div>\n            </div>\n\n            <div className=\"columns card\">\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column is-hidden-mobile\"></div>\n              <div className=\"column has-text-centered\">\n                Total\n              </div>\n              <div className=\"column has-text-centered\">\n                {utils.displayInSelectedCurrency({\n                  price: this.getCartTotal(),\n                  currency: this.props.currency\n                })}\n              </div>\n            </div>\n\n            <div className=\"has-text-centered\">\n              <Link to=\"/address\" className=\"button is-danger\">Enter address</Link>\n            </div>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"title has-text-centered\">Cart empty!</div>\n          <div className=\"subtitle has-text-centered\">Go to the menu and add some pizzas!</div>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faPhone } from \"@fortawesome/free-solid-svg-icons\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport api from \"../services/api\";\n\nexport default class Address extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      orderConfirmed: false\n    }\n  }\n\n  render() {\n\n    if (this.state.orderConfirmed) {\n      return <Redirect to=\"/thank-you\"/>\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <Formik\n            enableReinitialize={true}\n            initialValues={{\n              email: this.props.loggedInUser ? this.props.loggedInUser.email : '',\n              phone: '',\n              address: '',\n              zip_code: '',\n            }}\n            validate={values => {\n              const errors = {};\n              if (!values.email) {\n                errors.email = 'Required';\n              } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n              }\n              if (!values.phone) {\n                errors.phone = 'Required'\n              }\n              if (!values.address) {\n                errors.address = 'Required'\n              }\n              if (!values.zip_code) {\n                errors.zip_code = 'Required'\n              }\n              return errors;\n            }}\n            onSubmit={(values, {setSubmitting}) => {\n              setTimeout(() => {\n                api.call({\n                  url: '/orders',\n                  method: 'POST',\n                  body: {\n                    customer_email: values.email,\n                    address: values.address,\n                    zip_code: values.zip_code,\n                    phone: values.phone,\n                    cart: this.props.cart\n                  },\n                  handleSuccess: (result) => {\n                    this.props.onEmptyCart();\n                    this.setState({\n                      orderConfirmed: true\n                    });\n                  },\n                  handleError: (error) => {\n                    alert(\"Error processing order\");\n                    setSubmitting(false);\n                  }\n                });\n              }, 400);\n            }}\n          >\n            {({isSubmitting}) => (\n              <Form>\n                <div className=\"title has-text-centered\">Please enter your address</div>\n                <div className=\"subtitle has-text-centered\">and contact details</div>\n                <div className=\"box\">\n                  <div className=\"columns\">\n                    <div className=\"column\">\n                      <div className=\"field\">\n                        <label className=\"label\">Email</label>\n                        <div className=\"control has-icons-left\">\n                          <Field type=\"email\" name=\"email\" className=\"input\" disabled={!!this.props.loggedInUser}/>\n                          <span className=\"icon is-small is-left\">\n                            <FontAwesomeIcon icon={faEnvelope}/>\n                          </span>\n                        </div>\n                        <ErrorMessage name=\"email\" component=\"p\" className=\"help is-danger\"/>\n                      </div>\n                    </div>\n                    <div className=\"column\">\n                      <div className=\"field\">\n                        <label className=\"label\">Phone</label>\n                        <div className=\"control has-icons-left\">\n                          <Field type=\"text\" name=\"phone\" className=\"input\"/>\n                          <span className=\"icon is-small is-left\">\n                            <FontAwesomeIcon icon={faPhone}/>\n                          </span>\n                        </div>\n                        <ErrorMessage name=\"phone\" component=\"p\" className=\"help is-danger\"/>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"field\">\n                    <label className=\"label\">Address</label>\n                    <div className=\"control\">\n                      <Field component=\"textarea\" name=\"address\" className=\"textarea\"/>\n                    </div>\n                    <ErrorMessage name=\"address\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n                  <div className=\"columns\">\n                    <div className=\"column is-half\">\n                      <div className=\"field\">\n                        <label className=\"label\">Zip code</label>\n                        <div className=\"control\">\n                          <Field type=\"text\" name=\"zip_code\" className=\"input\"/>\n                        </div>\n                        <ErrorMessage name=\"zip_code\" component=\"p\" className=\"help is-danger\"/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"has-text-centered\">\n                  <button type=\"submit\" className=\"button is-danger\" disabled={isSubmitting}>Confirm order\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class ThankYou extends React.Component {\n  render() {\n    return (\n      <section className=\"section\">\n        <div className=\"container has-text-centered\">\n          <FontAwesomeIcon icon={faCheckCircle} style={{fontSize: 50}}/>\n          <br/>\n          <br/>\n          <div className=\"subtitle\">Your order has been placed. <br/> Your Super Pizza is on the way.</div>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\nimport { faPizzaSlice } from '@fortawesome/free-solid-svg-icons'\nimport { Link } from \"react-router-dom\";\nimport classNames from 'classnames';\n\nexport default class Header extends React.Component {\n\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      isMenuOpen: false,\n\n    }\n  }\n\n  openMenu() {\n    this.setState({\n      isMenuOpen: true\n    });\n  }\n\n  closeMenu() {\n    this.setState({\n      isMenuOpen: false\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <Link className=\"navbar-item\" to=\"/\">\n            <FontAwesomeIcon icon={faPizzaSlice} size=\"lg\"/>\n          </Link>\n\n          <a role=\"button\"\n             className={classNames({'navbar-burger': true, burger: true, 'is-active': this.state.isMenuOpen})}\n             onClick={() => this.state.isMenuOpen ? this.closeMenu() : this.openMenu()}\n             aria-label=\"menu\" aria-expanded=\"false\"\n             data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div className={classNames({'navbar-menu': true, 'is-active': this.state.isMenuOpen})}>\n          <div className=\"navbar-start\" onClick={() => this.closeMenu()}>\n            <Link to=\"/\" className=\"navbar-item\">Menu</Link>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"select\">\n                <select value={this.props.currency}\n                        onChange={(e) => this.props.onCurrencySelect(e.target.value)}>\n                  <option value=\"usd\">USD</option>\n                  <option value=\"eur\">EUR</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"navbar-item\" onClick={() => this.closeMenu()}>\n              <div className=\"buttons\">\n\n                {this.props.loggedInUser ? (\n                  <>\n                  <Link className=\"button is-primary\" to=\"/orders\">\n                    <strong>My Orders</strong>\n                  </Link>\n                  <button className=\"button is-light\" onClick={()=>this.props.onLogOut()}>\n                    <strong>Logout</strong>\n                  </button>\n                  </>\n                ) : (\n                  <>\n                    <Link className=\"button is-primary\" to=\"/register\">\n                      <strong>Sign up</strong>\n                    </Link>\n                    <Link className=\"button is-light\" to=\"/login\">\n                      Log in\n                    </Link>\n                  </>\n                )}\n                <Link className=\"button is-white\" to='/cart'>\n                  <span className=\"icon\">\n                    <FontAwesomeIcon icon={faShoppingCart}/>\n                  </span>\n                  {!!this.props.cartCount && <div className=\"count\">({this.props.cartCount})</div>}\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport api from \"../services/api\";\nimport swal from '@sweetalert/with-react';\n\nexport default class Register extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      formSubmitted: false\n    }\n  }\n\n  render() {\n\n    if (this.props.loggedInUser) {\n      return <Redirect to=\"/orders\"/>\n    }\n\n    if (this.state.formSubmitted) {\n      return <Redirect to=\"/login\"/>\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <Formik\n            initialValues={{\n              name: '',\n              email: '',\n              password: '',\n              password_confirmation: '',\n            }}\n            validate={values => {\n              const errors = {};\n              if (!values.email) {\n                errors.email = 'Required';\n              } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n              }\n              if (!values.name) {\n                errors.name = 'Required'\n              }\n              if (!values.password) {\n                errors.password = 'Required'\n              }\n              if (!values.password_confirmation) {\n                errors.password_confirmation = 'Required'\n              }\n              if (values.password.length < 8) {\n                errors.password = 'Password should be at least 8 characters long'\n              }\n              if (values.password !== values.password_confirmation) {\n                errors.password_confirmation = 'Passwords do not match'\n              }\n              return errors;\n            }}\n            onSubmit={(values, {setSubmitting}) => {\n              setTimeout(() => {\n                api.call({\n                  url: 'register',\n                  method: 'POST',\n                  body: {\n                    email: values.email,\n                    name: values.name,\n                    password: values.password,\n                    password_confirmation: values.password_confirmation\n                  },\n                  handleSuccess: (result) => {\n                    this.setState({\n                      formSubmitted: true\n                    });\n                  },\n                  handleError: (error) => {\n                    swal(\n                      <p>{error.errors ? error.errors[Object.keys(error.errors)[0]] : error.message}</p>\n                    );\n                    setSubmitting(false);\n                  }\n                });\n              }, 400);\n            }}\n          >\n            {({isSubmitting}) => (\n              <Form>\n                <div className=\"title has-text-centered\">Register</div>\n                <div className=\"box\">\n\n                  <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control\">\n                      <Field type=\"email\" name=\"email\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"email\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n                  <div className=\"field\">\n                    <label className=\"label\">Name</label>\n                    <div className=\"control\">\n                      <Field type=\"text\" name=\"name\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"name\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n\n                  <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                      <Field type=\"password\" name=\"password\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"password\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n\n                  <div className=\"field\">\n                    <label className=\"label\">Confirm password</label>\n                    <div className=\"control\">\n                      <Field type=\"password\" name=\"password_confirmation\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"password_confirmation\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n                </div>\n                <div className=\"has-text-centered\">\n                  <button type=\"submit\" className=\"button is-danger\" disabled={isSubmitting}>Register\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport api from \"../services/api\";\nimport swal from '@sweetalert/with-react';\n\nexport default class Login extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      formSubmitted: false\n    }\n  }\n\n  render() {\n\n    if (this.state.formSubmitted) {\n      return <Redirect to=\"/orders\"/>\n    }\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n            }}\n            validate={values => {\n              const errors = {};\n              if (!values.email) {\n                errors.email = 'Required';\n              } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n              }\n              if (!values.password) {\n                errors.password = 'Required'\n              }\n              return errors;\n            }}\n            onSubmit={(values, {setSubmitting}) => {\n              setTimeout(() => {\n                api.call({\n                  url: 'login',\n                  method: 'POST',\n                  body: {\n                    email: values.email,\n                    password: values.password\n                  },\n                  handleSuccess: (result) => {\n                    this.props.onLogin();\n                    this.setState({\n                      formSubmitted: true\n                    });\n                  },\n                  handleError: (error) => {\n                    swal(\n                      <p>{error.errors ? error.errors[Object.keys(error.errors)[0]] : error.message}</p>\n                    );\n                    setSubmitting(false);\n                  }\n                });\n              }, 400);\n            }}\n          >\n            {({isSubmitting}) => (\n              <Form>\n                <div className=\"title has-text-centered\">Login</div>\n                <div className=\"box\">\n\n                  <div className=\"field\">\n                    <label className=\"label\">Email</label>\n                    <div className=\"control\">\n                      <Field type=\"email\" name=\"email\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"email\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n                  <div className=\"field\">\n                    <label className=\"label\">Password</label>\n                    <div className=\"control\">\n                      <Field type=\"password\" name=\"password\" className=\"input\"/>\n                    </div>\n                    <ErrorMessage name=\"password\" component=\"p\" className=\"help is-danger\"/>\n                  </div>\n\n                </div>\n                <div className=\"has-text-centered\">\n                  <button type=\"submit\" className=\"button is-danger\" disabled={isSubmitting}>Login\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </section>\n    );\n  }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport utils from \"../services/utils\";\n\nexport default class Orders extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      unauthorised: false,\n      isLoadingOrders: true,\n      orders: []\n    }\n  }\n\n  componentDidMount() {\n    api.call({\n      url: '/orders',\n      method: 'GET',\n      handleSuccess: (result) => {\n        this.setState({\n          orders: result,\n          isLoadingOrders: false\n        })\n      },\n      handleError: (error) => {\n        this.setState({\n          unauthorised: true\n        })\n      }\n    })\n  }\n\n  render() {\n\n    if (this.state.unauthorised) {\n      return <Redirect to=\"/login\"/>\n    }\n\n    if (!this.state.orders.length && !this.state.isLoadingOrders) {\n      return (\n        <div className=\"section\">\n          <div className=\"subtitle has-text-centered\">No orders found. Visit our menu for delicious pizzas!</div>\n        </div>\n      );\n    }\n\n    const orders = this.state.orders.map(order => (\n      <div className=\"box\" key={order.id}>\n        <div>\n          <b>Order\n            Id:</b> {order.id} | <b>Date:</b> {order.created_at} | <b>Items:</b> {order.suborders.length} |\n          <b> Cost: </b> {utils.displayInSelectedCurrency(\n          {\n            price: order.cost + order.delivery_fee,\n            currency: this.props.currency\n          })}\n        </div>\n        <div>\n          {order.suborders.map(suborder => (\n            <div className=\"is-inline-block box\" style={{margin: 5}}>\n              <figure className=\"image is-64x64\">\n                <img src={suborder.pizza.image_url} alt={suborder.pizza.name}/>\n              </figure>\n              {suborder.pizza.name}\n            </div>\n          ))}\n        </div>\n      </div>\n    ));\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          {orders}\n        </div>\n      </section>\n    );\n  }\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport './App.scss';\nimport Menu from \"./Menu/Menu\";\nimport Cart from \"./Cart/Cart\";\nimport Address from \"./Address/Address\";\nimport ThankYou from \"./ThankYou/ThankYou\";\nimport Header from \"./Header/Header\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\nimport Orders from \"./Orders/Orders\";\nimport api from \"./services/api\";\n\nexport default class App extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      cart: localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [],\n      currency: localStorage.getItem('currency') || 'usd',\n      loggedInUser: false\n    }\n  }\n\n  componentDidMount() {\n    this.loginUser();\n  }\n\n  loginUser() {\n    api.call({\n      url: '/auth',\n      method: 'GET',\n      handleSuccess: (result) => {\n        this.setState({\n          loggedInUser: result\n        })\n      },\n      handleError: (error) => {\n\n      }\n    })\n  }\n\n  currencySelect(currency) {\n    localStorage.setItem('currency', currency);\n    this.setState({\n      currency\n    })\n  }\n\n  addToCart({pizza}) {\n    pizza.quantity = 1;\n    this.setState({\n      cart: [...this.state.cart, pizza]\n    });\n\n    localStorage.setItem('cart', JSON.stringify([...this.state.cart, pizza]));\n  }\n\n  removeFromCart({id}) {\n    const filteredCart = this.state.cart.filter(pizza => {\n      return pizza.id !== id;\n    });\n    this.setState({\n      cart: filteredCart\n    });\n\n    if (this.state.cart.length) {\n      localStorage.setItem('cart', JSON.stringify(filteredCart));\n    } else {\n      localStorage.removeItem('cart');\n    }\n  }\n\n  updateQuantity({id, quantity}) {\n\n    const updatedCart = this.state.cart.map(pizza => {\n      if (pizza.id === id) {\n        pizza.quantity = quantity\n      }\n      return pizza;\n    });\n\n    this.setState({\n      cart: updatedCart\n    });\n\n    localStorage.setItem('cart', JSON.stringify(updatedCart));\n  }\n\n  emptyCart() {\n    localStorage.removeItem('cart');\n    this.setState({\n      cart: []\n    });\n  }\n\n  logOutUser() {\n    api.call({\n      url: '/logout',\n      method: 'POST',\n      handleSuccess: (result) => {\n        window.location.reload();\n      },\n      handleError: (error) => {\n        window.location.reload();\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Header cartCount={this.state.cart.length}\n                    onCurrencySelect={(currency) => this.currencySelect(currency)}\n                    currency={this.state.currency}\n                    loggedInUser={this.state.loggedInUser}\n                    onLogOut={() => this.logOutUser()}\n            />\n            <Switch>\n              <Route exact path=\"/\">\n                <Menu\n                  currency={this.state.currency}\n                  cart={this.state.cart}\n                  onAddToCart={(pizza) => this.addToCart({pizza})}\n                  onUpdateQuantity={(id, quantity) => this.updateQuantity({id, quantity})}\n                  onRemoveFromCart={(id) => this.removeFromCart({id})}\n                />\n              </Route>\n              <Route path=\"/cart\">\n                <Cart\n                  cart={this.state.cart}\n                  currency={this.state.currency}\n                  onUpdateQuantity={(id, quantity) => this.updateQuantity({id, quantity})}\n                  onRemoveFromCart={(id) => this.removeFromCart({id})}\n                />\n              </Route>\n              <Route path=\"/address\">\n                <Address\n                  cart={this.state.cart}\n                  onEmptyCart={() => this.emptyCart()}\n                  loggedInUser={this.state.loggedInUser}\n                />\n              </Route>\n              <Route path=\"/thank-you\">\n                <ThankYou/>\n              </Route>\n              <Route path=\"/login\">\n                <Login onLogin={() => this.loginUser()}/>\n              </Route>\n              <Route path=\"/register\">\n                <Register/>\n              </Route>\n              <Route path=\"/orders\">\n                <Orders currency={this.state.currency}/>\n              </Route>\n            </Switch>\n            <footer className=\"footer\">\n              <div className=\"content has-text-centered\">\n                <p>\n                  &copy; Super Pizzas. Developed for Innoscripta.\n                </p>\n              </div>\n            </footer>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}